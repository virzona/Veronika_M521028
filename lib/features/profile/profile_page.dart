import 'package:flutter/material.dart';
import 'package:test_environtment/features/profile/widgets/circle_story.dart';
import 'package:test_environtment/features/profile/widgets/story_preview.dart';
import 'package:shared_preferences/shared_preferences.dart';

//–û–±—ä—è–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ ProfileScreen, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º (stateful) –∏ –Ω–∞—Å–ª–µ–¥—É–µ—Ç –æ—Ç StatefulWidget
class ProfileScreen extends StatefulWidget {
  ProfileScreen({Key? key}) : super(key: key);

  @override
  _ProfileScreenState createState() => _ProfileScreenState();
}

//–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞ ProfileScreen,
// –≤–∫–ª—é—á–∞—è —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—Ä–∏–π (_stories), –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∏–º–µ–Ω–∏ (_nameController) –∏
// —Å–ø–∏—Å–æ–∫ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (_imageUrls)
class _ProfileScreenState extends State<ProfileScreen> {
  final List _stories = [
    '–ò—Å—Ç–æ—Ä–∏—è 1',
    '–ò—Å—Ç–æ—Ä–∏—è 2',
    '–ò—Å—Ç–æ—Ä–∏—è 3',
    '–ò—Å—Ç–æ—Ä–∏—è 4',
    '–ò—Å—Ç–æ—Ä–∏—è 5'
  ];
  late TextEditingController _nameController;
  List<String> _imageUrls = [];
//–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ build, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç—Ä–æ–∏—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç UI –≤–∏–¥–∂–µ—Ç–∞
// –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ DefaultTabController, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∫–ª–∞–¥–∫–∏ (Tabs) –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞
  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
        initialIndex: 1,
        length: 2,
        child: Scaffold(
          appBar: AppBar(
            automaticallyImplyLeading: false,
            backgroundColor: Colors.transparent,
            title: Text(
              _nameController.text,
              style: TextStyle(fontWeight: FontWeight.bold),
            ),
            actions: [
              Row(
                children: [
                   Padding(
                    padding: EdgeInsets.all(8.0),
                    child: IconButton(
                      icon: Icon(
                        Icons.add_box_outlined,
                        size: 30,
                      ),
                      onPressed: _addImage,
                    ),
                  ),
                  Padding(
                      padding: EdgeInsets.all(8.0),
                      child: Icon(
                        Icons.table_rows_rounded,
                        size: 30,
                      ),
                    ),
                ],
              )
            ],
          ),
          backgroundColor: Colors.transparent,
          body: Column(
            children: [
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Padding(
                    padding: EdgeInsets.only(top: 5.0, left: 10),
                    child: ClipOval(
                      child: Image(
                        height: 80,
                        width: 80,
                        image: NetworkImage(
                            'https://pixelbox.ru/wp-content/uploads/2022/01/avatar-estetik-krasota-pixelbox.ru-89.jpg'),
                        fit: BoxFit.cover,
                      ),
                    ),
                  ),
                  Row(
                    children: [
                      Column(
                        children: [
                          Text(
                            _imageUrls.length.toString(),
                            style: TextStyle(
                              fontWeight: FontWeight.bold,
                              color: Colors.black,
                              fontSize: 20,
                            ),
                          ),
                          Text(
                            '–ü–æ—Å—Ç—ã',
                            style: TextStyle(color: Colors.black, fontSize: 15),
                          ),
                        ],
                      ),
                    ],
                  ),
                  Column(
                    children: [
                      Text(
                        '2357',
                        style: TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Colors.black,
                            fontSize: 20),
                      ),
                      Text(
                        '–ü–æ–¥–ø–∏—Å—á–∏–∫–∏',
                        style: TextStyle(color: Colors.black, fontSize: 15),
                      ),
                    ],
                  ),
                  Padding(
                    padding: EdgeInsets.only(right: 26.0),
                    child: Column(
                      children: [
                        Text(
                          '56',
                          style: TextStyle(
                              fontWeight: FontWeight.bold,
                              color: Colors.black,
                              fontSize: 20),
                        ),
                        Text(
                          '–ü–æ–¥–ø–∏—Å–∫–∏',
                          style: TextStyle(color: Colors.black, fontSize: 15),
                        ),
                      ],
                    ),
                  ),
                ],
              ),

              Row(
                children: [
                  Padding(
                    padding: EdgeInsets.only(left: 26),
                    child: Text(
                      _nameController.text,
                      style: TextStyle(
                          color: Colors.black,
                          fontSize: 17,
                          fontWeight: FontWeight.bold),
                    ),
                  ),
                ],
              ),
              Row(
                children: const [
                  Padding(
                    padding: EdgeInsets.only(left: 8.0),
                    child: Text(
                      'üå∫üå∫üå∫üå∫üå∫',
                      style: TextStyle(color: Colors.black),
                    ),
                  ),
                ],
              ),
              Row(
                children: [
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Container(
                      height: 32,
                      width: 330,
                      decoration: BoxDecoration(
                          color: Colors.grey.shade300,
                          borderRadius: BorderRadius.circular(8)),
                      child: InkWell(
                        onTap: () => _editProfile(),
                        child: Center(
                          child: Text(
                            '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å',
                            style: TextStyle(
                                color: Colors.black,
                                fontWeight: FontWeight.bold),
                          ),
                        ),
                      ),
                    ),
                  ),
                  Padding(
                      padding: const EdgeInsets.all(4.0),
                      child: Container(
                        height: 32,
                        width: 32,
                        decoration: BoxDecoration(
                            color: Colors.grey.shade300,
                            borderRadius: BorderRadius.circular(8)),
                        child: const Center(
                          child: Icon(
                            Icons.person_add,
                            color: Colors.black,
                          ),
                        ),
                      )),
                ],
              ),
              Row(
                children: const [
                  Padding(
                    padding: EdgeInsets.only(top: 16.0, left: 18),
                    child: Text(
                      '–ê–∫—Ç—É–∞–ª—å–Ω–æ–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–π',
                      style: TextStyle(
                          color: Colors.black,
                          fontSize: 17,
                          fontWeight: FontWeight.bold),
                    ),
                  ),
                ],
              ),
              Row(
                children: const [
                  Padding(
                    padding: EdgeInsets.only(top: 6.0, left: 18),
                    child: Text(
                      '–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏',
                      style: TextStyle(color: Colors.black),
                    ),
                  ),
                ],
              ),
              SizedBox(
                height: 120,
                child: ListView.builder(
                    itemCount: _stories.length,
                    scrollDirection: Axis.horizontal,
                    itemBuilder: (context, index) {
                      return StoryWidget(
                        username: _stories[index],
                      );
                    }),
              ),

              const TabBar(tabs: <Widget>[
                Tab(
                  icon: Icon(Icons.video_collection_outlined),
                ),
                Tab(
                  icon: Icon(Icons.person_add_alt_outlined),
                ),
              ]),

              Expanded(
                child: TabBarView(
                  children: <Widget>[
                    GridView.count(
                      scrollDirection: Axis.vertical,
                      shrinkWrap: true,
                      primary: false,
                      padding: const EdgeInsets.all(4),
                      crossAxisSpacing: 2,
                      mainAxisSpacing: 2,
                      crossAxisCount: 3,
                      children: _imageUrls.map((imageUrl) {
                        return _buildImageContainer(imageUrl);
                      }).toList(),
                    ),
                    Center(
                      child: Column(
                        children: const [
                          SizedBox(
                            height: 50,
                          ),
                          Icon(
                            Icons.person_add,
                            color: Colors.black,
                            size: 60,
                          ),
                          Text(
                            "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≤–∏–¥–µ–æ —Å –í–∞–º–∏",
                            style: TextStyle(color: Colors.black),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ));
  }

  //–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ initState, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∏–º–µ–Ω–∏ –∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, SharedPreferences)
  @override
  void initState() {
    super.initState();
    _nameController = TextEditingController();
    _loadUserName();
    _loadImages();
  }

  //–ú–µ—Ç–æ–¥ _loadUserName, –∫–æ—Ç–æ—Ä—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  void _loadUserName() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    String? savedName = prefs.getString('userName');
    setState(() {
      _nameController.text = savedName ?? 'Name';
    });
  }

  //–ú–µ—Ç–æ–¥ _loadImages, –∫–æ—Ç–æ—Ä—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  void _loadImages() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    setState(() {
      _imageUrls = prefs.getStringList('imageUrls') ?? [];
    });
  }

  //–ú–µ—Ç–æ–¥ _editProfile, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤–æ–µ –∏–º—è
  void _editProfile() async {
    final newName = await showDialog<String>(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: const Text('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è'),
          content: TextFormField(
            controller: _nameController,
            decoration: const InputDecoration(labelText: '–ù–æ–≤–æ–µ –∏–º—è'),
          ),
          actions: <Widget>[
            TextButton(
              onPressed: () => Navigator.pop(context, _nameController.text),
              child: const Text('Save'),
            ),
          ],
        );
      },
    );

    if (newName != null && newName.isNotEmpty) {
      _saveUserName(newName); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –∏–º—è –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
    }
  }

  //–ú–µ—Ç–æ–¥ _saveUserName, –∫–æ—Ç–æ—Ä—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
  void _saveUserName(String newName) async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    prefs.setString('userName', newName);
    setState(() {
      _nameController.text = newName;
    });
  }

  //–ú–µ—Ç–æ–¥ _saveImages, –∫–æ—Ç–æ—Ä—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
  void _saveImages() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    prefs.setStringList('imageUrls', _imageUrls);
  }

  //–ú–µ—Ç–æ–¥ _addImage, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π URL
  void _addImage() async {
    TextEditingController imageUrlController = TextEditingController();

    await showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: const Text('–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'),
          content: TextFormField(
            controller: imageUrlController,
            decoration: const InputDecoration(labelText: '–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'),
          ),
          actions: <Widget>[
            TextButton(
              onPressed: () => Navigator.pop(context),
              child: const Text('–û—Ç–º–µ–Ω–∞'),
            ),
            TextButton(
              onPressed: () {
                if (imageUrlController.text.isNotEmpty) {
                  Navigator.pop(context, imageUrlController.text);
                }
              },
              child: const Text('–î–æ–±–∞–≤–∏—Ç—å'),
            ),
          ],
        );
      },
    ).then((imageUrl) {
      if (imageUrl != null && imageUrl.isNotEmpty) {
        setState(() {
          _imageUrls.add(imageUrl);
          _saveImages(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        });
      }
    });
  }

  //–ú–µ—Ç–æ–¥ _buildImageContainer, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∏–¥–∂–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–µ—Ç–∫–µ
  Widget _buildImageContainer(String imageUrl) {
    return InkWell(
      onTap: () {
        _showFullScreenImage(imageUrl);
      },
      child: Container(
        padding: const EdgeInsets.all(0),
        child: Image(
          image: NetworkImage(imageUrl),
          fit: BoxFit.cover,
        ),
      ),
    );
  }

  //–ú–µ—Ç–æ–¥ _showFullScreenImage, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å –ø–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.
  void _showFullScreenImage(String imageUrl) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return Dialog(
          child: GestureDetector(
            onTap: () {
              Navigator.of(context).pop();
            },
            child: Container(
              width: double.infinity,
              height: double.infinity,
              child: Image.network(
                imageUrl,
                fit: BoxFit.contain,
              ),
            ),
          ),
        );
      },
    );
  }
}
